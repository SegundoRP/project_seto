//  dashboard

.row{
  margin: 0 auto;
  justify-content: center;
}

.charts-container {
  min-height: 450px;

  .line-chart,
  .pie-chart {
    display: flex;
    align-items: center;
  }
}

.stock-alert {
  color: #F20F38;
}

.dashboard-table {
  font-size: 14px;
  width: 95%;
  border-collapse: separate;
  border-spacing: 0 1em;

  td {
    max-height: 55px;
    padding: 0;
  }

  tr td:first-child {
    border-radius: 10px 0 0 10px;
  }

  tbody tr {
    max-height: 55px;
  }

  .name-column {
    color: #4e4e4e;
  }

  .column-info {
    min-width: 120px;
    text-align: center;
    vertical-align: middle;
  }
}

.filter-products {
  width: 80%;
  margin: 0 auto;
  text-align: end;
}

.firstrow-dashboard {
  .card {
    color: red;
  }

  .card-body {
    padding: 0.35rem;
  }

}

.border-left-low-stock {
  border-left: 0.25rem solid #F87B92;
}

.border-left-profit {
  border-left: 0.25rem solid #F20F38;
}

.border-left-earnigs {
  border-left: 0.25rem solid rgba(1, 52, 64, 0.8);
}

.border-left-ticket {
  border-left: 0.25rem solid #013440;
}

.text-card1-dashboard {
  color: #F87B92;
}

.text-card2-dashboard {
  color: #F20F38;
}

.text-card3-dashboard {
  color: rgba(1, 52, 64, 0.8);
}

.text-card4-dashboard {
  color: #013440;
}

// Global component styles


#content {
  background-color: white;
}

// Main page wrapper
#wrapper {
  display: flex;

  #content-wrapper {
    background-color: $gray-100;
    width: 100%;
    overflow-x: hidden;

    #content {
      flex: 1 0 auto;
    }
  }
}

// Set container padding to match gutter width instead of default 15px
.container,
.container-fluid {
  padding-left: $grid-gutter-width;
  padding-right: $grid-gutter-width;
}

@media screen and (max-width: 991px) {
  .card-table-consultation{
    width: 98%;
  }
}

























//
// Basic Bootstrap table
//

.table {
  width: 100%;
  margin-bottom: $spacer;
  color: $table-color;
  background-color: $table-bg; // Reset for nesting within parents with `background-color`.

  th,
  td {
    padding: $table-cell-padding;
    vertical-align: top;
    border-top: $table-border-width solid $table-border-color;
  }

  thead th {
    vertical-align: bottom;
    border-bottom: (2 * $table-border-width) solid $table-border-color;
  }

  tbody+tbody {
    border-top: (2 * $table-border-width) solid $table-border-color;
  }
}


//
// Condensed table w/ half padding
//

.table-sm {

  th,
  td {
    padding: $table-cell-padding-sm;
  }
}


// Border versions
//
// Add or remove borders all around the table and between all the columns.

.table-bordered {
  border: $table-border-width solid $table-border-color;

  th,
  td {
    border: $table-border-width solid $table-border-color;
  }

  thead {

    th,
    td {
      border-bottom-width: 2 * $table-border-width;
    }
  }
}

.table-borderless {

  th,
  td,
  thead th,
  tbody+tbody {
    border: 0;
  }
}

// Zebra-striping
//
// Default zebra-stripe styles (alternating gray and transparent backgrounds)

.table-striped {
  tbody tr:nth-of-type(#{$table-striped-order}) {
    background-color: $table-accent-bg;
  }
}



// Table backgrounds
//
// Exact selectors below required to override `.table-striped` and prevent
// inheritance to nested tables.




// Dark styles
//
// Same table markup, but inverted color scheme: dark background and light text.

// stylelint-disable-next-line no-duplicate-selectors
.table {
  .thead-dark {
    th {
      color: $table-dark-color;
      background-color: $table-dark-bg;
      border-color: $table-dark-border-color;
    }
  }

  .thead-light {
    th {
      color: $table-head-color;
      background-color: $table-head-bg;
      border-color: $table-border-color;
    }
  }
}

.table-dark {
  color: $table-dark-color;
  background-color: $table-dark-bg;

  th,
  td,
  thead th {
    border-color: $table-dark-border-color;
  }

  &.table-bordered {
    border: 0;
  }

  &.table-striped {
    tbody tr:nth-of-type(#{$table-striped-order}) {
      background-color: $table-dark-accent-bg;
    }
  }


}


// Responsive tables
//
// Generate series of `.table-responsive-*` classes for configuring the screen
// size of where your table will overflow.

.table-responsive {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        display: block;
        width: 100%;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;

        // Prevent double border on horizontal scroll due to use of `display: block;`
        >.table-bordered {
          border: 0;
        }
      }
    }
  }
}
